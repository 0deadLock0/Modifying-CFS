diff -Naur ./linux-5.9.1-base/arch/x86/entry/syscalls/syscall_64.tbl ./linux-5.9.1/arch/x86/entry/syscalls/syscall_64.tbl
--- ./linux-5.9.1-base/arch/x86/entry/syscalls/syscall_64.tbl	2020-11-09 15:37:05.537328610 +0530
+++ ./linux-5.9.1/arch/x86/entry/syscalls/syscall_64.tbl	2020-11-09 16:10:40.566359127 +0530
@@ -405,2 +405,6 @@
 546	x32	preadv2			compat_sys_preadv64v2
 547	x32	pwritev2		compat_sys_pwritev64v2
+
+# CustomSystemCalls/rtnice/
+548	64	rtnice		sys_rtnice
+
diff -Naur ./linux-5.9.1-base/CustomSystemCalls/rtnice/Makefile ./linux-5.9.1/CustomSystemCalls/rtnice/Makefile
--- ./linux-5.9.1-base/CustomSystemCalls/rtnice/Makefile	1970-01-01 05:30:00.000000000 +0530
+++ ./linux-5.9.1/CustomSystemCalls/rtnice/Makefile	2020-11-09 16:18:24.183040664 +0530
@@ -0,0 +1,3 @@
+
+obj-y := rtnice.o
+
diff -Naur ./linux-5.9.1-base/CustomSystemCalls/rtnice/rtnice.c ./linux-5.9.1/CustomSystemCalls/rtnice/rtnice.c
--- ./linux-5.9.1-base/CustomSystemCalls/rtnice/rtnice.c	1970-01-01 05:30:00.000000000 +0530
+++ ./linux-5.9.1/CustomSystemCalls/rtnice/rtnice.c	2020-11-10 19:54:48.332374273 +0530
@@ -0,0 +1,38 @@
+
+#include <linux/syscalls.h>
+#include <linux/kernel.h>
+#include <linux/sched.h>
+
+SYSCALL_DEFINE2(rtnice, int, pid, long, realtimeGuarantee)
+{
+	//printk("PID: |%d|, Realtime Guarantee: |%ld|\n",pid,realtimeGuarantee);
+	
+	if(realtimeGuarantee<0)
+	{
+		printk("ERROR: Invalid value of Realtime Guarantee: \"%ld\", it can't be negative\n",realtimeGuarantee);
+		return 1;
+	}
+	
+	int found=0;
+	struct task_struct *task;
+	for_each_process(task)
+	{
+		if(pid==(int)task->pid)
+		{
+			found=1;
+			long initial_rt_nice=task->se.rt_nice;
+			task->se.rt_nice=realtimeGuarantee;
+			printk("Changed rt_nice value of \"%s\" with pid \"%d\" from \"%ld\" to \"%ld\"\n",task->comm,pid,initial_rt_nice,realtimeGuarantee);
+			break;
+		}
+	}
+	
+	if(!found)
+	{
+		printk("ERROR: No Task exists with PID: \"%d\"\n",pid);
+		return 1;
+	}
+	
+	return 0;
+}
+
diff -Naur ./linux-5.9.1-base/include/linux/sched.h ./linux-5.9.1/include/linux/sched.h
--- ./linux-5.9.1-base/include/linux/sched.h	2020-11-09 15:37:17.354444662 +0530
+++ ./linux-5.9.1/include/linux/sched.h	2020-11-09 17:15:18.853850423 +0530
@@ -461,6 +461,9 @@
 
 	u64				nr_migrations;
 
+//rt_nice not part of the original kernel, added for study purpose
+	u64				rt_nice;
+	
 	struct sched_statistics		statistics;
 
 #ifdef CONFIG_FAIR_GROUP_SCHED
diff -Naur ./linux-5.9.1-base/include/linux/syscalls.h ./linux-5.9.1/include/linux/syscalls.h
--- ./linux-5.9.1-base/include/linux/syscalls.h	2020-11-09 16:20:17.023179068 +0530
+++ ./linux-5.9.1/include/linux/syscalls.h	2020-11-09 17:23:17.090209114 +0530
@@ -1346,3 +1346,10 @@
 int __sys_setsockopt(int fd, int level, int optname, char __user *optval,
		int optlen);
+
+/*Start: Custom System Calls*/
+
+asmlinkage long sys_rtnice(int pid, long realtimeGuarantee); // CustomSystemCalls/rtnice/
+
+/*End: Custom System Calls*/
+
 #endif
diff -Naur ./linux-5.9.1-base/kernel/sched/core.c ./linux-5.9.1/kernel/sched/core.c
--- ./linux-5.9.1-base/kernel/sched/core.c	2020-11-09 15:37:20.014696671 +0530
+++ ./linux-5.9.1/kernel/sched/core.c	2020-11-09 17:15:10.189338924 +0530
@@ -3070,6 +3070,10 @@
 	p->se.prev_sum_exec_runtime	= 0;
 	p->se.nr_migrations		= 0;
 	p->se.vruntime			= 0;
+
+//rt_nice not part of the original kernel, added for study purpose	
+	p->se.rt_nice			= 0;
+	
 	INIT_LIST_HEAD(&p->se.group_node);
 
 #ifdef CONFIG_FAIR_GROUP_SCHED
diff -Naur ./linux-5.9.1-base/kernel/sched/fair.c ./linux-5.9.1/kernel/sched/fair.c
--- ./linux-5.9.1-base/kernel/sched/fair.c	2020-11-09 15:37:20.022697431 +0530
+++ ./linux-5.9.1/kernel/sched/fair.c	2020-11-10 19:48:43.767284709 +0530
@@ -534,7 +534,14 @@
 static inline int entity_before(struct sched_entity *a,
 				struct sched_entity *b)
 {
-	return (s64)(a->vruntime - b->vruntime) < 0;
+/*START: Not part of the original kernel, added for study purpose*/
+	if(a->rt_nice>0 || b->rt_nice>0)
+		return (s64)(a->rt_nice - b->rt_nice) > 0;
+	else
+		return (s64)(a->vruntime - b->vruntime) < 0;
+/*END: Not part of the original kernel, added for study purpose*/
+	
+	//return (s64)(a->vruntime - b->vruntime) < 0;
 }
 
 static void update_min_vruntime(struct cfs_rq *cfs_rq)
@@ -859,8 +866,19 @@
 
 	curr->sum_exec_runtime += delta_exec;
 	schedstat_add(cfs_rq->exec_clock, delta_exec);
+	
+/*START: Not part of the original kernel, added for study purpose*/
+	if (curr->rt_nice > 0)
+	{
+		curr->rt_nice -= delta_exec;
+		if (curr->rt_nice < 0)
+			curr->rt_nice = 0;
+	}
+	else
+		curr->vruntime += calc_delta_fair(delta_exec, curr);
+/*END: Not part of the original kernel, added for study purpose*/
 
-	curr->vruntime += calc_delta_fair(delta_exec, curr);
+	//curr->vruntime += calc_delta_fair(delta_exec, curr);
 	update_min_vruntime(cfs_rq);
 
 	if (entity_is_task(curr)) {
diff -Naur ./linux-5.9.1-base/Makefile ./linux-5.9.1/Makefile
--- ./linux-5.9.1-base/Makefile	2020-11-09 15:37:14.754198603 +0530
+++ ./linux-5.9.1/Makefile	2020-11-09 16:12:12.924738341 +0530
@@ -1094,7 +1094,7 @@
 export MODULES_NSDEPS := $(extmod-prefix)modules.nsdeps
 
 ifeq ($(KBUILD_EXTMOD),)
-core-y		+= kernel/ certs/ mm/ fs/ ipc/ security/ crypto/ block/
+core-y		+= kernel/ certs/ mm/ fs/ ipc/ security/ crypto/ block/ CustomSystemCalls/rtnice/
 
 vmlinux-dirs	:= $(patsubst %/,%,$(filter %/, \
 		     $(core-y) $(core-m) $(drivers-y) $(drivers-m) \
